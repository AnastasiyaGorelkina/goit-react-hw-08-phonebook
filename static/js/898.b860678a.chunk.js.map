{"version":3,"file":"static/js/898.b860678a.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled.form`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 3px solid #cbeaed;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 35px;\n  border-radius: 10px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover, :focus {\n    transform: scale(1.05);\n    background: #cbeaed;\n    box-shadow: 5px 3px 10px 1px;\n    color: black;\n  }\n`;\n\nexport const Add = styled.button`\n  display: block;\n  margin: 0px auto;\n  padding: 8px;\n  border: 2px solid rgb(8, 41, 17);\n  border-radius: 4px;\n  cursor: pointer;\n  color: black;\n  background-color:#81dee8e1;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    transform: scale(1.05);\n    background: green;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    color: #fff;\n  }\n`;","import { Label, Form, Title, Input, Add } from './ContactsForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContacts } from 'redux/contacts/contactsAPI';\n\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n   \n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.phone.value,\n    };\n   \n    if (contacts.find(({ name }) => name === contact.name)) {\n      Notiflix.Notify.warning('Such a contact already exists! Try again.');\n      return;\n    }\n    dispatch(addContacts(contact));\n    Notiflix.Notify.success('Add contact');\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n      <Label htmlFor={nameInputId}>\n        <Title>Name</Title>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameInputId}\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        <Title>Number</Title>\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={numberInputId}\n        />\n      </Label>\n      <Add type=\"submit\">Add contact</Add>\n      </div>\n    </Form>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  width: 400px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border: 2px solid #bfe7e5f8;\n  border-radius: 5px;\n  cursor: pointer;\n  color: black;\n  background-color: #1cc3d6;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    transform: scale(1.05);\n    background: red;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    color: #FFF;\n    border: 2px solid red;\n`;\n\nexport const Loading = styled.div`\nmargin: 0 ;\ntop: 553px;\nleft:540px;\ncolor: #cbeaed;\nfont-size: 25px;\n`;","import { Item, List, Button, Loading } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notiflix from \"notiflix\";\nimport { deleteContact } from \"redux/contacts/contactsAPI\";\n\nexport const ContactList = () => {\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const contacts = useSelector(state => state.contacts.items);\n  const filterContact = useSelector(state => state.filters.filter);\n  const dispatch = useDispatch();\n\n  const delContact = id => {\n    Notiflix.Notify.failure('Contact delet');\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterContact)\n    );\n  };\n\n  const visible = getVisibleContacts();\n\n  return (\n    <>\n      <Loading>{isLoading && <p>Loading...</p>}</Loading>\n\n      <List>\n        {visible.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <p>{name}: {number}</p>\n              <Button type=\"button\" onClick={() => delContact(id)}>Delete</Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};","import { Input, Label } from \"components/ContactsForm/ContactsForm.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { filterContacts } from \"redux/filter/filterSlice\"\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <Label>\n      <h3>Find contacts by name</h3>\n      <Input onChange={onChangeFilter} name=\"filter\" />\n    </Label>\n  );\n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/contactsAPI\";\nimport { ContactForm } from \"components/ContactsForm/ContactsForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { HelmetProvider, Helmet } from \"react-helmet-async\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.contacts.isLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    \n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>My phonebook</title>\n            </Helmet>\n            <div>{isLoading && 'Request in progress...'}</div>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </HelmetProvider>\n    );\n};"],"names":["Label","styled","Form","Title","Input","Add","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","nameInputId","nanoid","numberInputId","onSubmit","e","preventDefault","contact","name","target","elements","value","number","phone","find","Notiflix","addContacts","reset","htmlFor","type","pattern","title","required","id","Item","List","Button","Loading","ContactList","isLoading","filterContact","filters","filter","visible","toLowerCase","includes","map","onClick","deleteContact","delContact","Filter","onChange","filterContacts","Contacts","useEffect","fetchContacts"],"sourceRoot":""}